{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wotjw\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\React_Study\\\\05-http-project\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-5f427-default-rtdb.firebaseio.com/movies.json\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  async function addMovieHandler(movie) {\n    // @ 데이터 전송, POST 요청\n    const response = await fetch(\"https://react-http-5f427-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      // @ firebase에는 post요청을 보내면 리소스를 만들어줌\n      body: JSON.stringify(movie),\n      // @ javascript 객체를 JSON 형식으로 바꿔주는 JSON.stringify()\n      headers: {\n        \"Content-Type\": \"applicatgion/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Found no movies.\");\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    });\n  }\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, error);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, content));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","content","length"],"sources":["C:/Users/wotjw/OneDrive/문서/GitHub/React_Study/05-http-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport MoviesList from \"./components/MoviesList\";\r\nimport AddMovie from \"./components/AddMovie\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchMoviesHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://react-http-5f427-default-rtdb.firebaseio.com/movies.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const transformedMovies = data.results.map((movieData) => {\r\n        return {\r\n          id: movieData.episode_id,\r\n          title: movieData.title,\r\n          openingText: movieData.opening_crawl,\r\n          releaseDate: movieData.release_date,\r\n        };\r\n      });\r\n      setMovies(transformedMovies);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMoviesHandler();\r\n  }, [fetchMoviesHandler]);\r\n\r\n  async function addMovieHandler(movie) {\r\n    // @ 데이터 전송, POST 요청\r\n    const response = await fetch(\r\n      \"https://react-http-5f427-default-rtdb.firebaseio.com/movies.json\",\r\n      {\r\n        method: \"POST\", // @ firebase에는 post요청을 보내면 리소스를 만들어줌\r\n        body: JSON.stringify(movie), // @ javascript 객체를 JSON 형식으로 바꿔주는 JSON.stringify()\r\n        headers: {\r\n          \"Content-Type\": \"applicatgion/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    console.log(data);\r\n  }\r\n\r\n  let content = <p>Found no movies.</p>;\r\n\r\n  if (movies.length > 0) {\r\n    content = <MoviesList movies={movies} />;\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <AddMovie onAddMovie={addMovieHandler} />\r\n      </section>\r\n      <section>\r\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\r\n      </section>\r\n      <section>{content}</section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}