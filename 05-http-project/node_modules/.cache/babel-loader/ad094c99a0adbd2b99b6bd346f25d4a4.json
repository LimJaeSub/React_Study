{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mspc\\\\Documents\\\\GitHub\\\\React_Study\\\\05-http-project\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nfunction App() {\n  const [moives, setMovies] = useState([]);\n  const [isLoading, setIsLoding] = useState(false);\n  async function fetchMoviesHandler() {\n    setIsLoding(true);\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoding(false);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, !isLoading && moives.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: moives,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 42\n    }\n  }), !isLoading && moives.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }\n  }, \"found no movies.\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, \"Loading....\")));\n}\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","moives","setMovies","isLoading","setIsLoding","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"sources":["C:/Users/mspc/Documents/GitHub/React_Study/05-http-project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport MoviesList from \"./components/MoviesList\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [moives, setMovies] = useState([]);\r\n  const [isLoading, setIsLoding] = useState(false);\r\n  async function fetchMoviesHandler() {\r\n    setIsLoding(true);\r\n    const response = await fetch(\"https://swapi.dev/api/films/\");\r\n    const data = await response.json();\r\n    const transformedMovies = data.results.map((movieData) => {\r\n        return {\r\n          id: movieData.episode_id,\r\n          title: movieData.title,\r\n          openingText: movieData.opening_crawl,\r\n          releaseDate: movieData.release_date,\r\n        };\r\n      });\r\n    setMovies(transformedMovies);\r\n    setIsLoding(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\r\n      </section>\r\n      <section>\r\n        {!isLoading &&moives.length>0 && <MoviesList movies={moives} />}\r\n        {!isLoading&&moives.length===0&&<p>found no movies.</p>}\r\n        {isLoading && <p>Loading....</p>}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAElB,SAASC,GAAG,GAAG;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAChD,eAAeO,kBAAkB,GAAG;IAClCD,WAAW,CAAC,IAAI,CAAC;IACjB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;MACtD,OAAO;QACLC,EAAE,EAAED,SAAS,CAACE,UAAU;QACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;QACpCC,WAAW,EAAEN,SAAS,CAACO;MACzB,CAAC;IACH,CAAC,CAAC;IACJlB,SAAS,CAACQ,iBAAiB,CAAC;IAC5BN,WAAW,CAAC,KAAK,CAAC;EACpB;EAEA,oBACE,oBAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEC,kBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAsB,CAClD,eACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACF,SAAS,IAAGF,MAAM,CAACoB,MAAM,GAAC,CAAC,iBAAI,oBAAC,UAAU;IAAC,MAAM,EAAEpB,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9D,CAACE,SAAS,IAAEF,MAAM,CAACoB,MAAM,KAAG,CAAC,iBAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAAuB,EACtDlB,SAAS,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAAkB,CACxB,CACK;AAErB;AAEA,eAAeH,GAAG"},"metadata":{},"sourceType":"module"}