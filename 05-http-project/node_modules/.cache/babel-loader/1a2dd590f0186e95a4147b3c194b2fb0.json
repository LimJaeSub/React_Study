{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mspc\\\\Documents\\\\GitHub\\\\React_Study\\\\05-http-project\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nfunction App() {\n  const [moives, setMovies] = useState([]);\n  function fetchMoviesHandler() {\n    fetch(\"https://swapi.dev/api/films/\").then(response => {\n      return response.json(); // json 파일을 자바스크립트 객체로 변환시켜주는 메소드\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    });\n    // @ fetch api, 사용자가 전달하려는 url주소를 문자열로 전달\n    // HTTP 요청은 비동기 작업, 즉시 완료되는 작업이 아님\n    // then < 응답을 받을때 호출하는 함수\n    // catch < 잠재적 오류 처리 함수\n\n    // api는 데이터를 json형식으로 전송함\n\n    // 1.url에서 data를 받아온다\n    // 2.받아오면 해당 응답을 자바스크립트 객체로 변환시킨다(then(response.json()))\n    // 3.변환시키면 해당 데이터를 map 메소드를 통해 새로운 객체로 변환한다.\n    // 4.setState를 통해 상태 변경\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: moives,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","moives","setMovies","fetchMoviesHandler","fetch","then","response","json","data","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date"],"sources":["C:/Users/mspc/Documents/GitHub/React_Study/05-http-project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport MoviesList from \"./components/MoviesList\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [moives, setMovies] = useState([]);\r\n  function fetchMoviesHandler() {\r\n    fetch(\"https://swapi.dev/api/films/\")\r\n      .then((response) => {\r\n        return response.json(); // json 파일을 자바스크립트 객체로 변환시켜주는 메소드\r\n      })\r\n      .then((data) => {\r\n        const transformedMovies = data.results.map((movieData) => {\r\n          return {\r\n            id: movieData.episode_id,\r\n            title: movieData.title,\r\n            openingText: movieData.opening_crawl,\r\n            releaseDate: movieData.release_date,\r\n          };\r\n        });\r\n        setMovies(transformedMovies);\r\n      });\r\n    // @ fetch api, 사용자가 전달하려는 url주소를 문자열로 전달\r\n    // HTTP 요청은 비동기 작업, 즉시 완료되는 작업이 아님\r\n    // then < 응답을 받을때 호출하는 함수\r\n    // catch < 잠재적 오류 처리 함수\r\n\r\n    // api는 데이터를 json형식으로 전송함\r\n\r\n    // 1.url에서 data를 받아온다\r\n    // 2.받아오면 해당 응답을 자바스크립트 객체로 변환시킨다(then(response.json()))\r\n    // 3.변환시키면 해당 데이터를 map 메소드를 통해 새로운 객체로 변환한다.\r\n    // 4.setState를 통해 상태 변경\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\r\n      </section>\r\n      <section>\r\n        <MoviesList movies={moives} />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAElB,SAASC,GAAG,GAAG;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,SAASK,kBAAkB,GAAG;IAC5BC,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;QACxD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UAAU;UACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;UACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;UACpCC,WAAW,EAAEN,SAAS,CAACO;QACzB,CAAC;MACH,CAAC,CAAC;MACFjB,SAAS,CAACO,iBAAiB,CAAC;IAC9B,CAAC,CAAC;IACJ;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;EACF;;EAEA,oBACE,oBAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEN,kBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAsB,CAClD,eACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAU;IAAC,MAAM,EAAEF,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACtB,CACK;AAErB;AAEA,eAAeD,GAAG"},"metadata":{},"sourceType":"module"}