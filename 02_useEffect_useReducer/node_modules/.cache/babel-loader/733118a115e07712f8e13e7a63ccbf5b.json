{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mspc\\\\Documents\\\\GitHub\\\\React_Study\\\\02_useEffect_useReducer\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.isValid\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  }; // default state\n};\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_INPUT':\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6\n      };\n\n    case 'INPUT_BLUR':\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n\n    default:\n      return {\n        value: '',\n        isValid: false\n      };\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  }); // useEffect(()=>{\n  //   const identifier = setTimeout(()=>{\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   },500);\n  //   return ()=>{\n  //     console.log(\"cleanup!\");\n  //     clearTimeout(identifier);\n  //   };\n  //   //처음 실행되는 경우를 제외하고 위 useEffect함수가 실행된 후 cleanup함수 실행\n  //   //컴포넌트가 리렌더링이나 사라진 후 cleanup함수를 실행한다.\n  // },[enteredEmail,enteredPassword]);\n  // //둘 중 하나라도 바뀐게 있으면 실행\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"QkvTfR1Flwc6jXJ/IXGsPtYzsAY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/mspc/Documents/GitHub/React_Study/02_useEffect_useReducer/src/components/Login/Login.js"],"sourcesContent":["import React, { useState,useEffect,useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state,action)=>{\n  if(action.type==='USER_INPUT'){\n    return {value:action.val, isValid:action.val.includes('@')};\n  }\n  if(action.type==='INPUT_BLUR'){\n    return {value:state.value,isValid:state.isValid}\n  }\n  return {value:'',isValid:false};\n  // default state\n}\n\nconst passwordReducer = (state,action)=>{\n  switch(action.type){\n    case 'USER_INPUT':\n      return {value:action.val,isValid:action.val.trim().length>6};\n    case 'INPUT_BLUR':\n      return {value:state.value,isValid:state.value.trim().length>6};\n    default:\n      return {value:'',isValid:false}\n  }\n}\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n\n  const [emailState,dispatchEmail] = useReducer(emailReducer,{value:'',isValid:null});\n  const [passwordState,dispatchPassword]=useReducer(passwordReducer,{value:'',isValid:null});\n  // useEffect(()=>{\n  //   const identifier = setTimeout(()=>{\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   },500);\n    \n  //   return ()=>{\n  //     console.log(\"cleanup!\");\n  //     clearTimeout(identifier);\n  //   };\n  //   //처음 실행되는 경우를 제외하고 위 useEffect함수가 실행된 후 cleanup함수 실행\n  //   //컴포넌트가 리렌더링이나 사라진 후 cleanup함수를 실행한다.\n  // },[enteredEmail,enteredPassword]);\n  // //둘 중 하나라도 바뀐게 있으면 실행\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type:'USER_INPUT',val:event.target.value})\n\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type:'USER_INPUT',val:event.target.value})\n\n    setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type:'INPUT_BLUR'})\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type:'INPUT_BLUR'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,UAAnC,QAAqD,OAArD;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;EACnC,IAAGA,MAAM,CAACC,IAAP,KAAc,YAAjB,EAA8B;IAC5B,OAAO;MAACC,KAAK,EAACF,MAAM,CAACG,GAAd;MAAmBC,OAAO,EAACJ,MAAM,CAACG,GAAP,CAAWE,QAAX,CAAoB,GAApB;IAA3B,CAAP;EACD;;EACD,IAAGL,MAAM,CAACC,IAAP,KAAc,YAAjB,EAA8B;IAC5B,OAAO;MAACC,KAAK,EAACH,KAAK,CAACG,KAAb;MAAmBE,OAAO,EAACL,KAAK,CAACK;IAAjC,CAAP;EACD;;EACD,OAAO;IAACF,KAAK,EAAC,EAAP;IAAUE,OAAO,EAAC;EAAlB,CAAP,CAPmC,CAQnC;AACD,CATD;;AAWA,MAAME,eAAe,GAAG,CAACP,KAAD,EAAOC,MAAP,KAAgB;EACtC,QAAOA,MAAM,CAACC,IAAd;IACE,KAAK,YAAL;MACE,OAAO;QAACC,KAAK,EAACF,MAAM,CAACG,GAAd;QAAkBC,OAAO,EAACJ,MAAM,CAACG,GAAP,CAAWI,IAAX,GAAkBC,MAAlB,GAAyB;MAAnD,CAAP;;IACF,KAAK,YAAL;MACE,OAAO;QAACN,KAAK,EAACH,KAAK,CAACG,KAAb;QAAmBE,OAAO,EAACL,KAAK,CAACG,KAAN,CAAYK,IAAZ,GAAmBC,MAAnB,GAA0B;MAArD,CAAP;;IACF;MACE,OAAO;QAACN,KAAK,EAAC,EAAP;QAAUE,OAAO,EAAC;MAAlB,CAAP;EANJ;AAQD,CATD;;AAUA,MAAMK,KAAK,GAAIC,KAAD,IAAW;EAAA;;EACvB;EACA;EACA;EACA;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;EAGA,MAAM,CAACqB,UAAD,EAAYC,aAAZ,IAA6BpB,UAAU,CAACI,YAAD,EAAc;IAACI,KAAK,EAAC,EAAP;IAAUE,OAAO,EAAC;EAAlB,CAAd,CAA7C;EACA,MAAM,CAACW,aAAD,EAAeC,gBAAf,IAAiCtB,UAAU,CAACY,eAAD,EAAiB;IAACJ,KAAK,EAAC,EAAP;IAAUE,OAAO,EAAC;EAAlB,CAAjB,CAAjD,CATuB,CAUvB;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMa,kBAAkB,GAAIC,KAAD,IAAW;IACpCJ,aAAa,CAAC;MAACb,IAAI,EAAC,YAAN;MAAmBE,GAAG,EAACe,KAAK,CAACC,MAAN,CAAajB;IAApC,CAAD,CAAb;IAEAU,cAAc,CACZC,UAAU,CAACT,OAAX,IAAsBW,aAAa,CAACX,OADxB,CAAd;EAGD,CAND;;EAQA,MAAMgB,qBAAqB,GAAIF,KAAD,IAAW;IACvCF,gBAAgB,CAAC;MAACf,IAAI,EAAC,YAAN;MAAmBE,GAAG,EAACe,KAAK,CAACC,MAAN,CAAajB;IAApC,CAAD,CAAhB;IAEAU,cAAc,CACZC,UAAU,CAACT,OAAX,IAAsBc,KAAK,CAACC,MAAN,CAAajB,KAAb,CAAmBK,IAAnB,GAA0BC,MAA1B,GAAmC,CAD7C,CAAd;EAGD,CAND;;EAQA,MAAMa,oBAAoB,GAAG,MAAM;IACjCP,aAAa,CAAC;MAACb,IAAI,EAAC;IAAN,CAAD,CAAb;EACD,CAFD;;EAIA,MAAMqB,uBAAuB,GAAG,MAAM;IACpCN,gBAAgB,CAAC;MAACf,IAAI,EAAC;IAAN,CAAD,CAAhB;EACD,CAFD;;EAIA,MAAMsB,aAAa,GAAIL,KAAD,IAAW;IAC/BA,KAAK,CAACM,cAAN;IACAd,KAAK,CAACe,OAAN,CAAcZ,UAAU,CAACX,KAAzB,EAAgCa,aAAa,CAACb,KAA9C;EACD,CAHD;;EAKA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAEN,OAAO,CAAC8B,KAAzB;IAAA,uBACE;MAAM,QAAQ,EAAEH,aAAhB;MAAA,wBACE;QACE,SAAS,EAAG,GAAE3B,OAAO,CAAC+B,OAAQ,IAC5Bd,UAAU,CAACT,OAAX,KAAuB,KAAvB,GAA+BR,OAAO,CAACgC,OAAvC,GAAiD,EAClD,EAHH;QAAA,wBAKE;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UACE,IAAI,EAAC,OADP;UAEE,EAAE,EAAC,OAFL;UAGE,KAAK,EAAEf,UAAU,CAACX,KAHpB;UAIE,QAAQ,EAAEe,kBAJZ;UAKE,MAAM,EAAEI;QALV;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAeE;QACE,SAAS,EAAG,GAAEzB,OAAO,CAAC+B,OAAQ,IAC5BZ,aAAa,CAACX,OAAd,KAA0B,KAA1B,GAAkCR,OAAO,CAACgC,OAA1C,GAAoD,EACrD,EAHH;QAAA,wBAKE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UACE,IAAI,EAAC,UADP;UAEE,EAAE,EAAC,UAFL;UAGE,KAAK,EAAEb,aAAa,CAACb,KAHvB;UAIE,QAAQ,EAAEkB,qBAJZ;UAKE,MAAM,EAAEE;QALV;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QAfF,eA6BE;QAAK,SAAS,EAAE1B,OAAO,CAACiC,OAAxB;QAAA,uBACE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAsB,SAAS,EAAEjC,OAAO,CAACkC,GAAzC;UAA8C,QAAQ,EAAE,CAACnB,WAAzD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QA7BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuCD,CA9FD;;GAAMF,K;;KAAAA,K;AAgGN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}