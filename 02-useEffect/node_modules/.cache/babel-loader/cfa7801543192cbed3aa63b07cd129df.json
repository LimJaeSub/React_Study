{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mspc\\\\Documents\\\\GitHub\\\\React_Study\\\\02-useEffect\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []); //useEffect는 모든 컴포넌트 내 함수가 실행 된 후 실행(제일마지막)된다.\n  //따라서 여기서 state가 업데이트 된 후 컴포넌트 함수를 재실행한다.\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","App","isLoggedIn","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"sources":["C:/Users/mspc/Documents/GitHub/React_Study/02-useEffect/src/App.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\n\r\nimport Login from './components/Login/Login';\r\nimport Home from './components/Home/Home';\r\nimport MainHeader from './components/MainHeader/MainHeader';\r\n\r\nfunction App() {\r\n  \r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  \r\n\r\n  useEffect(()=>{\r\n      const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\r\n      if(storedUserLoggedInInformation==='1'){\r\n      setIsLoggedIn(true);\r\n    }\r\n  },[]); \r\n  //useEffect는 모든 컴포넌트 내 함수가 실행 된 후 실행(제일마지막)된다.\r\n  //따라서 여기서 state가 업데이트 된 후 컴포넌트 함수를 재실행한다.\r\n\r\n\r\n  const loginHandler = (email, password) => {\r\n    // We should of course check email and password\r\n    // But it's just a dummy/ demo anyways\r\n    localStorage.setItem('isLoggedIn','1');\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem('isLoggedIn');\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\r\n      <main>\r\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\r\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;EAGAC,SAAS,CAAC,MAAI;IACV,MAAMO,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;IACA,IAAGF,6BAA6B,KAAG,GAAnC,EAAuC;MACvCD,aAAa,CAAC,IAAD,CAAb;IACD;EACF,CALQ,EAKP,EALO,CAAT,CALa,CAWb;EACA;;EAGA,MAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;IACxC;IACA;IACAJ,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAkC,GAAlC;IACAP,aAAa,CAAC,IAAD,CAAb;EACD,CALD;;EAOA,MAAMQ,aAAa,GAAG,MAAM;IAC1BN,YAAY,CAACO,UAAb,CAAwB,YAAxB;IACAT,aAAa,CAAC,KAAD,CAAb;EACD,CAHD;;EAKA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,UAAD;MAAY,eAAe,EAAED,UAA7B;MAAyC,QAAQ,EAAES;IAAnD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,WACG,CAACT,UAAD,iBAAe,QAAC,KAAD;QAAO,OAAO,EAAEK;MAAhB;QAAA;QAAA;QAAA;MAAA,QADlB,EAEGL,UAAU,iBAAI,QAAC,IAAD;QAAM,QAAQ,EAAES;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GApCQV,G;;KAAAA,G;AAsCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}