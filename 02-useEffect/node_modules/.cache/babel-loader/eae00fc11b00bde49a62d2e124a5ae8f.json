{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mspc\\\\Documents\\\\GitHub\\\\React_Study\\\\02-useEffect\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    }; //action의 type이 USER_INPUT일 경우 value와 isValid의 상태를 업데이트 한다.\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }; //value에 현재 상태인 state도 사용이 가능\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    }; //action의 type이 USER_INPUT일 경우 value와 isValid의 상태를 업데이트 한다.\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }; //value에 현재 상태인 state도 사용이 가능\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchpassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('Effect Running');\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState; //우측 객체의 isValid값을 옆의 상수에 할당함\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"checking\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('cleanup');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]); //emali하고 password의 유효성이 변경될 때마다 form의 유효성 검사 \n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'UESR_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchpassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length>6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchpassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"s1qAbJ9zlu+ZtYUWYy82tz8NfvU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchpassword","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/mspc/Documents/GitHub/React_Study/02-useEffect/src/components/Login/Login.js"],"sourcesContent":["import React, { useState,useEffect,useReducer } from 'react';\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Login.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst emailReducer=(state,action)=>{\r\n  if(action.type==='USER_INPUT'){\r\n    return {value:action.val, isValid:action.val.includes('@')}; //action의 type이 USER_INPUT일 경우 value와 isValid의 상태를 업데이트 한다.\r\n  }\r\n  if(action.type==='INPUT_BLUR'){\r\n    return{value:state.value,isValid:state.value.includes('@')};//value에 현재 상태인 state도 사용이 가능\r\n  }\r\n  return {value:'',isValid:false};\r\n}\r\n\r\nconst passwordReducer=(state,action)=>{\r\n  if(action.type==='USER_INPUT'){\r\n    return {value:action.val, isValid:action.val.includes('@')}; //action의 type이 USER_INPUT일 경우 value와 isValid의 상태를 업데이트 한다.\r\n  }\r\n  if(action.type==='INPUT_BLUR'){\r\n    return{value:state.value,isValid:state.value.includes('@')};//value에 현재 상태인 state도 사용이 가능\r\n  }\r\n  return {value:'',isValid:false};\r\n}\r\n\r\nconst Login = (props) => {\r\n  // const [enteredEmail, setEnteredEmail] = useState('');\r\n  // const [emailIsValid, setEmailIsValid] = useState();\r\n  // const [enteredPassword, setEnteredPassword] = useState('');\r\n  // const [passwordIsValid, setPasswordIsValid] = useState();\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n  const [emailState,dispatchEmail] = useReducer(emailReducer,{\r\n    value:'',\r\n    isValid:null,\r\n  });\r\n\r\n  const [passwordState,dispatchpassword]=useReducer(passwordReducer,{\r\n    value:'',\r\n    isValid:null,\r\n  });\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log('Effect Running');\r\n  },[]);\r\n\r\n  const {isValid:emailIsValid} = emailState;\r\n  const {isValid:passwordIsValid} = passwordState;\r\n  //우측 객체의 isValid값을 옆의 상수에 할당함\r\n\r\n  useEffect(()=>{\r\n    const identifier = setTimeout(()=>{\r\n      console.log(\"checking\");\r\n      setFormIsValid(\r\n        emailIsValid && passwordIsValid\r\n      );\r\n    },500);\r\n    return ()=>{\r\n      console.log('cleanup');\r\n      clearTimeout(identifier);\r\n    }; \r\n  },[emailIsValid,passwordIsValid])\r\n  //emali하고 password의 유효성이 변경될 때마다 form의 유효성 검사 \r\n  const emailChangeHandler = (event) => {\r\n    dispatchEmail({type:'UESR_INPUT',val:event.target.value});\r\n    setFormIsValid(\r\n      event.target.value.includes('@') && passwordState.isValid\r\n    );\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchpassword({type:'USER_INPUT',val:event.target.value})\r\n\r\n    // setFormIsValid(\r\n    //   emailState.isValid && event.target.value.trim().length>6\r\n    // );\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    dispatchEmail({type:'INPUT_BLUR'});\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    dispatchpassword({type:'INPUT_BLUR'})\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onLogin(emailState.value, passwordState.value);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        <div\r\n          className={`${classes.control} ${\r\n            emailState.isValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={emailState.value}\r\n            onChange={emailChangeHandler}\r\n            onBlur={validateEmailHandler}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${classes.control} ${\r\n            passwordState.isValid === false ? classes.invalid : ''\r\n          }`}\r\n        >\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={passwordState.value}\r\n            onChange={passwordChangeHandler}\r\n            onBlur={validatePasswordHandler}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}